@using X.PagedList.Mvc;
@using X.PagedList.Mvc.Bootstrap4

@model ead_frontend.Models.RequestListVm
@{
    ViewBag.Title = "Reshelved Requests";
    Layout = "../Shared/_RequestLayout.cshtml";
}

<h2>Reshelved @ViewBag.Library Requests</h2>
<hr />
<a href="@Url.Action("Reshelved")" class="badge badge-secondary small font-weight-light"><i class="fa fa-eye" aria-hidden="true"></i>  All Requests</a>
<a href="@Url.Action("Reshelved", new {library = "Joyner"})" class="badge badge-primary small font-weight-light"><i class="fa fa-eye" aria-hidden="true"></i> Joyner Requests</a>
<a href="@Url.Action("Reshelved", new {library = "Laupus"})" class="badge badge-success small font-weight-light"><i class="fa fa-eye" aria-hidden="true"></i> Laupus Requests</a>

@using (Html.BeginForm())
{
    <hr />
    <div class="row mb-3">
        <div class="col-lg-4">
            <div class="input-group">
                <input type="text" class="form-control" name="searchString" id="searchString" placeholder="Search Requests" autofocus="autofocus">
                <span class="input-group-append">
                    <button class="btn btn-primary" type="submit">Search</button>
                </span>
            </div>
        </div>
    </div>
}

<div class="small text-muted font-italic mb-0">Viewing @ViewBag.StartCount - @ViewBag.EndCount of @ViewBag.TotalCount</div>

@if (Model.Requests != null && Model.Requests.Count > 0)
{
    if (TempData["Message"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @Html.Raw(TempData["Message"])
        </div>
    }
    <table class="table table-striped table-small">
        <thead>
            <tr>
                <th><i class="fa fa-sort"></i> @Html.ActionLink("#", "Reshelved", new { sortOrder = ViewBag.RidSortParm, library = ViewBag.Library })</th>
                <th class="text-nowrap"><i class="fa fa-sort"></i> @Html.ActionLink("Email", "Reshelved", new { sortOrder = ViewBag.EmailSortParm, library = ViewBag.Library })</th>
                <th><i class="fa fa-sort"></i> @Html.ActionLink("Title", "Reshelved", new { sortOrder = ViewBag.TitleSortParm, library = ViewBag.Library })</th>
                <th class="text-nowrap"><i class="fa fa-sort"></i> @Html.ActionLink("Identifier", "Reshelved", new { sortOrder = ViewBag.IdSortParm, library = ViewBag.Library })</th>
                <th class="text-nowrap"><i class="fa fa-sort"></i> @Html.ActionLink("Completed", "Reshelved", new { sortOrder = ViewBag.DateSortParm, library = ViewBag.Library })</th>
            </tr>
        </thead>
        @foreach (var request in Model.Requests)
        {
            <tr onclick="window.location.href = '@Url.Action("View", "Request", new {request.id})';" class="cursor-pointer">
                <td>@request.id</td>
                <td>@request.email</td>
                <td>@request.title</td>
                <td>@request.identifier</td>
                <td>@request.completed_on</td>
            </tr>
        }

    </table>
    <div class="container">
        <div class="row justify-content-md-center">
            
            @if (ViewBag.CurrentFilter == null)
            {
                @Html.PagedListPager(Model.Requests, page => Url.Action("Reshelved", new { sortOrder = ViewBag.CurrentSort, page, library = ViewBag.Library }), Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)
            }
            else
            {
                @Html.PagedListPager(Model.Requests, page => Url.Action("Reshelved", new { sortOrder = ViewBag.CurrentSort, searchString = "^" + ViewBag.CurrentFilter, page, library = ViewBag.Library }), Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)
            }
        </div>
    </div>
}